About
-----
A *really* simple cache to disk library. It will either return data from the 
disk cache file or fetch it from the source. 

Usage Examples
--------------

.Basic Example
----
/**
 * Like just run this. It should be self explanitory 
 * how it works. 
 */
var cache = require('./Cache.js').Cache("/tmp", console.log);

/**
 *  cache.get returns a promise, cause tons of callback chains
 *  suck. 
 *  
 *  Usage: get(string key, cacheMissFn) { .... }
 */ 
var promise = cache.get('my testing data', function(callback) {
    // some async operation... 
    callback(results);    
});
----

.Multiple Callback Handlers on the Promise
----
promise.fulfilled(function(results) {
   console.log("Callback 1: " + results);
});

promise.fulfilled(function(results) {
   console.log("Callback 2: " + results);
});
----

.Fluent Interfaces
----
promise.fulfilled(function(results) {
    console.log("Fluent interface 1");
}).fulfilled(function(results) {
    console.log("Fluent interface 2");
}).fulfilled(function(results) {
    console.log("Fluent interface 3. Ok we get it");
});
----