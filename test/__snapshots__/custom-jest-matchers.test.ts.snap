// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toThrowErrorTaggedWith fails in .rejects mode when a promise rejects with an incorrectly-tagged error 1`] = `
"expect(received).rejects.toThrowErrorTaggedWith(expected)

Expected: [\\"b\\"] to be in the error's tag set
Received: [\\"a\\"]"
`;

exports[`toThrowErrorTaggedWith fails in .rejects mode when a promise resolves 1`] = `
"expect(received).rejects.toThrowErrorTaggedWith()

Received promise resolved instead of rejected
Resolved to value: undefined"
`;

exports[`toThrowErrorTaggedWith fails in .resolves mode when a promise rejects 1`] = `
"expect(received).resolves.toThrowErrorTaggedWith(expected)

Received value must be a function or Error but instead \\"undefined\\" was found"
`;

exports[`toThrowErrorTaggedWith fails in .resolves mode when a promise resolves 1`] = `
"expect(received).resolves.toThrowErrorTaggedWith(expected)

Received value must be a function or Error but instead \\"undefined\\" was found"
`;

exports[`toThrowErrorTaggedWith fails when callback does not throw 1`] = `
"expect(received).toThrowErrorTaggedWith(expected)

expected an Error to be thrown but none was"
`;

exports[`toThrowErrorTaggedWith fails when callback is not a function 1`] = `
"expect(received).toThrowErrorTaggedWith(expected)

Received value must be a function or Error but instead \\"undefined\\" was found"
`;

exports[`toThrowErrorTaggedWith fails when thrown error does not have a single required tag 1`] = `
"expect(received).toThrowErrorTaggedWith(expected)

Expected: [\\"a\\"] to be in the error's tag set
Received: [\\"b\\"]"
`;

exports[`toThrowErrorTaggedWith fails when thrown error is not tagged 1`] = `
"expect(received).toThrowErrorTaggedWith(expected)

Expected: [\\"a\\"] to be in the error's tag set
Received: *error is not tagged*"
`;

exports[`toThrowErrorTaggedWith fails when thrown error is tagged with a subset of required tags 1`] = `
"expect(received).toThrowErrorTaggedWith(expected)

Expected: [\\"a\\", \\"d\\"] to be in the error's tag set
Received: [\\"a\\", \\"b\\", \\"c\\"]"
`;
