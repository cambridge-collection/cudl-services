version: "3"

services:
  build:
    build:
      context: .
      dockerfile: build.Dockerfile
    environment:
      DOCKER_HOST: ${DOCKER_HOST:-unix:///var/run/docker.sock}
    volumes:
      # Provide access to our docker daemon to the build container so that it
      # can use it to build the image. Note: this is only for local runs, under
      # Bitbucket Pipelines DOCKER_HOST specifies a tcp:// URL for the docker
      # daemon.
      - /var/run/docker.sock:/var/run/docker.sock
    command: make docker-image
  test:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      TEST_DB_HOST: db
      CI: 'true'
    command: npm test --runInBand
    depends_on:
      - db
      - flyway

  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: cudlservices
      POSTGRES_DB: cudlservices
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD:-password}
    ports:
      - "${TEST_DB_PORT:-5432}:5432"

  flyway:
    image: flyway/flyway:6.1.0
    depends_on:
      - db
    volumes:
      - ./integration_test/data/postgres-migration:/flyway/sql
    environment:
      FLYWAY_URL: jdbc:postgresql://db/cudlservices
      FLYWAY_USER: cudlservices
      FLYWAY_PASSWORD: ${TEST_DB_PASSWORD:-password}
    command: migrate -connectRetries=60
